apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

group = 'com.cloudbees.genapp'
applicationName = 'tomcat8-clickstack'
version = '1.0.0-SNAPSHOT'

def tomcatVersion = "8.0.0-RC1"
mainClassName = 'com.cloudbees.genapp.tomcat.Setup'

startScripts {
    applicationName = 'instantiateClickstack'
}

repositories {
    mavenCentral()
    maven {
        // as documented on https://code.google.com/p/spymemcached/wiki/Maven
        url "http://files.couchbase.com/maven2/"
    }
}

configurations {
    clickstackPackage

    clickstackRuntimeJavaAgent.ext.targetFolder = "java-agent-lib"

    clickstackRuntime.ext.targetFolder = "tomcat-lib"
    clickstackRuntimePostgresql.ext.targetFolder = "tomcat-lib-postgresql"
    clickstackRuntimeMySql.ext.targetFolder = "tomcat-lib-mysql"
    clickstackRuntimeMail.ext.targetFolder = "tomcat-lib-mail"
    clickstackRuntimeMemcache.ext.targetFolder = "tomcat-lib-memcache"

    clickstackControl.ext.targetFolder = "control-lib"
}


dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.1.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.1.3'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    compile 'com.google.guava:guava:14.0.1'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:slf4j-simple:1.7.5'

    testCompile 'junit:junit:4.10'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.xmlmatchers:xml-matchers:1.0-RC1'

    clickstackPackage "org.apache.tomcat:tomcat:$tomcatVersion@zip"
    clickstackControl 'com.cloudbees:cloudbees-jmx-invoker:1.0.2:jar-with-dependencies'
    clickstackRuntimeJavaAgent 'org.jmxtrans.agent:jmxtrans-agent:1.0.6'
    clickstackRuntimeJavaAgent 'com.cloudbees.clickstack:cloudbees-clickstack-javaagent:1.2.0'
    clickstackRuntime 'com.cloudbees:cloudbees-web-container-extras:1.0.1'
    clickstackRuntimePostgresql 'postgresql:postgresql:9.1-901-1.jdbc4'
    clickstackRuntimeMySql 'mysql:mysql-connector-java:5.1.25'
    clickstackRuntimeMail 'javax.mail:mail:1.4.7'
    clickstackRuntimeMemcache('de.javakaffee.msm:memcached-session-manager-tc7:1.6.4') {
        exclude group: 'couchbase', module: 'couchbase-client'
    }
    clickstackRuntimeMemcache 'de.javakaffee.msm:msm-kryo-serializer:1.6.4'
}

manifest {
    attributes 'Main-Class': 'com.cloudbees.genapp.tomcat.Setup'
}


def explodedTomcatDir = "${buildDir}/tmp/explodedTomcatDir"

task prepareTomcatPackage() << {

    def tomcatOriginalDir = "${buildDir}/tmp/tomcatOriginal"

    copy {
        into tomcatOriginalDir
        from configurations.clickstackPackage
    }
    copy {
        from zipTree("$tomcatOriginalDir/tomcat-$tomcatVersion" + ".zip")
        into explodedTomcatDir
        exclude { fte ->
            logger.debug "name=$fte.name, path=$fte.path"
            fte.path.contains("/webapps/")
        }
    }
}

task packageTomcat(dependsOn: 'prepareTomcatPackage', type: Zip) {
    destinationDir new File(buildDir,"tmp")
    archiveName "tomcat-$tomcatVersion-cloudbees.zip"
    from new File(explodedTomcatDir, "apache-tomcat-$tomcatVersion")
}

applicationDistribution.from(packageTomcat) {
    into "package/deps/tomcat-package"
}

task copyDependencies() << {

    configurations.each { cfg ->
        if (cfg.ext.has("targetFolder")) {
            copyDeps(cfg, cfg.ext.targetFolder)
        } else {
            logger.debug "Ignore $cfg.name"
        }
    }
}

def copyDeps(configuration, targetFolder) {
    logger.debug "Copy deps for $configuration.name into $targetFolder"
    def workFolder = "$buildDir/tmp/deps/" + targetFolder
    copy {
        into workFolder
        from configuration
    }
    applicationDistribution.from(workFolder) {
        into "package/deps/" + targetFolder
    }
}

task createSetupScript {
    def scripts = file("$buildDir/tmp/scripts")
    outputs.dir scripts
    doLast {
        scripts.mkdirs()
        def text = """\
#!/bin/bash
cd \$(dirname \$0)
export JAVA_HOME=/opt/java7
export PATH=\$JAVA_HOME/bin:\$PATH
exec bin/instantiateClickstack \$@
"""
        File file = new File(scripts, "setup")
        file.write(text)
        file.setExecutable(true, false)
        return file
    }
}
applicationDistribution.from(createSetupScript) {
    into ""
}


applicationDistribution.from("src/main/tomcat") {
    into "package/tomcat"
}

applicationDistribution.from("src/main/script") {
    into "package/script"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.7'
}

installApp.dependsOn copyDependencies

task distZip(overwrite: true, dependsOn: 'installApp', type: Zip) {
    description = 'overwrite to exclude the parent folder of the generated zip'
    destinationDir new File(buildDir, "distributions")
    archiveName "$project.name-$project.version" + ".zip"
    from new File("$buildDir/install", "$project.name")
}

idea {
    project {
        languageLevel = '1.7'
    }
}
